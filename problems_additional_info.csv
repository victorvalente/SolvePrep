ProblemID,ProblemType,RequiredInfoDescription,Format_Example,AutomationNotes
1,"Traveling Salesman Problem","List of Cities","Comma-separated names: London,Paris,Berlin,...","Parse from Problem Statement or User Input"
1,"Traveling Salesman Problem","Flight Costs between City Pairs","Cost Matrix (CSV/JSON) or API endpoint returning cost for origin-destination pair","Fetch via Flight API (e.g., AviationStack) using IATA codes"
1,"Traveling Salesman Problem","Flight Durations between City Pairs","Duration Matrix (CSV/JSON, e.g., in hours) or API endpoint returning duration","Fetch via Flight API (e.g., AviationStack) using IATA codes"
1,"Traveling Salesman Problem","Airport Transfer Times per City","List of times (e.g., in hours) corresponding to the city list: 1.5, 1.0, 1.2,...","Estimate based on city/airport size or Request User Input"
2,"TSP with constraints","List of US National Parks","Comma-separated names: Yellowstone,Grand Canyon,...","Parse from Problem Statement or User Input"
2,"TSP with constraints","Vehicle MPG","Single decimal number: 25.0","Parse from Problem Statement or User Input"
2,"TSP with constraints","Driving Distances between Park Entrances/Locations","Distance Matrix (CSV/JSON, e.g., in miles)","Fetch via Mapping/Routing API (e.g., Google Distance Matrix) using geocoded coordinates"
2,"TSP with constraints","Elevation Data along Routes","API endpoint or dataset providing elevation changes for route segments","Fetch via specialized Mapping/Routing API or Topography dataset"
2,"TSP with constraints","Seasonal Park Closures/Road Status","List of parks with closure dates/status or API endpoint","Fetch via National Park Service (NPS) API or website scraping"
3,"Knapsack/Bin Packing Problem","List of Furniture Items with Dimensions & Value","CSV or JSON list: [{'name':'Sofa', 'width_cm':200, 'height_cm':90, 'depth_cm':100, 'value_usd':500}, ...]","Request User Input File (CSV/JSON)"
3,"Knapsack/Bin Packing Problem","Truck Cargo Dimensions","Single set of dimensions (W, H, D) in cm: 250, 200, 650","Parse from Problem Statement or User Input"
4,"Vehicle Routing Problem with Time Windows","List of Delivery Addresses","List of full street addresses: ['123 Main St, New York, NY 10001', ...]","Request User Input File (CSV/List) or parse from text"
4,"Vehicle Routing Problem with Time Windows","Geocoordinates for Delivery Addresses","List of (Lat, Lon) pairs corresponding to addresses: [(40.7128, -74.0060), ...]","Fetch via Geocoding API using addresses"
4,"Vehicle Routing Problem with Time Windows","Number of Drivers/Vehicles","Integer: 5","Parse from Problem Statement or User Input"
4,"Vehicle Routing Problem with Time Windows","Real-time Traffic Data Source","API endpoint/key for traffic conditions","Fetch via Traffic API (e.g., HERE Traffic API)"
4,"Vehicle Routing Problem with Time Windows","Customer Delivery Time Windows","List per address: [{'address_idx': 0, 'start_time': '09:00', 'end_time': '11:00'}, ...]","Request User Input File (CSV/JSON)"
5,"Facility Location Problem","Number of New Shops to Locate","Integer: 7","Parse from Problem Statement or User Input"
5,"Facility Location Problem","Minimum Distance Between Shops","Decimal number with units: 0.5 miles","Parse from Problem Statement or User Input"
5,"Facility Location Problem","Target Geographic Area","City name, boundary coordinates, or region definition: Seattle","Parse from Problem Statement or User Input"
5,"Facility Location Problem","Population Density Data","Dataset (e.g., GeoJSON, CSV grid) or API endpoint for the target area","Fetch via Census API (e.g., censusdis) or GIS data source"
5,"Facility Location Problem","Competitor Locations","List of competitor addresses or geocoordinates","Fetch via Business Listing API (e.g., Google Places API/Scraper)"
5,"Facility Location Problem","Commercial Real Estate Cost Data","Dataset (e.g., price per sqft by zone) or API endpoint for the target area","Fetch via Real Estate API (e.g., Crexi Scraper) or GIS data source"
5,"Facility Location Problem","Traffic Pattern Data","Dataset (e.g., road network congestion) or API endpoint for the target area","Fetch via Traffic API or GIS data source"
6,"Nurse Scheduling Problem","List of Nurses with Qualifications/Preferences","CSV or JSON list: [{'name':'Alice', 'qual':['RN','ICU'], 'prefs':['Day','No_Weekend']}, ...]","Request User Input File (CSV/JSON)"
6,"Nurse Scheduling Problem","Number of Shifts per Day","Integer: 3","Parse from Problem Statement or User Input"
6,"Nurse Scheduling Problem","Ward Staffing Requirements per Shift","JSON/Dict: {'ICU': {'Day':{'RN':2,'CNA':1}, 'Night':{...}}, 'ER':{...}}","Request User Input File (JSON/Dict)"
6,"Nurse Scheduling Problem","Labor Regulations (Consecutive days, hours/week)","List of rules: ['max_consecutive_days=5', 'max_hours_week=40']","Request User Input"
7,"Portfolio Optimization","Total Investment Amount","Decimal number: 50000.00","Parse from Problem Statement or User Input"
7,"Portfolio Optimization","List of Potential Assets (Stocks, Bonds, ETFs)","List of Ticker Symbols or Asset Names: ['AAPL', 'GOOG', 'AGG', 'VOO', ...]","Parse from Problem Statement or Request User Input"
7,"Portfolio Optimization","Risk Level Preference","Categorical description: 'low', 'medium', 'high'","Parse from Problem Statement or User Input"
7,"Portfolio Optimization","Diversification Rules","Description or constraints: 'Max 10% per sector', 'Min 5 assets'","Parse from Problem Statement or User Input"
7,"Portfolio Optimization","Historical Asset Performance Data (Prices/Returns)","Time series data (CSV/JSON) or API endpoint","Fetch via Financial Data API (e.g., yfinance, Alpha Vantage)"
7,"Portfolio Optimization","Asset Sector Classifications","Mapping from asset to sector: {'AAPL':'Technology', 'AGG':'Bond', ...}","Fetch via Financial Data API or use standard classifications (e.g., GICS)"
7,"Portfolio Optimization","Asset Volatility Metrics","Calculated values (e.g., standard deviation) or API endpoint","Calculate from historical data or Fetch via Financial Data API"
7,"Portfolio Optimization","Asset Correlation Data","Correlation Matrix (CSV/JSON)","Calculate from historical data or Fetch via Financial Data API"
8,"Timetabling Problem","List of Sessions with Topics/Speakers","CSV or JSON list: [{'session_id':1, 'title':'Intro to EA', 'speaker':'Dr. X', 'topic':'EA Basics'}, ...]","Request User Input File (CSV/JSON)"
8,"Timetabling Problem","List of Rooms with Capacities","CSV or JSON list: [{'room_name':'Room A', 'capacity':50}, ...]","Request User Input File (CSV/JSON)"
8,"Timetabling Problem","Conference Duration (Days)","Integer: 3","Parse from Problem Statement or User Input"
8,"Timetabling Problem","Timeslots per Day","Integer or list of start/end times","Request User Input"
8,"Timetabling Problem","Speaker Availability Constraints","JSON/Dict: {'Dr. X': ['Day1_Morning', 'Day2_All'], ...}","Request User Input File (JSON/Dict)"
8,"Timetabling Problem","Topic Relationships (Minimize distance/conflict)","JSON/Dict defining conflicts or desired proximity: {'conflict':[['EA Basics','Advanced EA']], 'track':['EA Basics','EA Apps']}","Request User Input File (JSON/Dict)"
8,"Timetabling Problem","Predicted Attendance per Session (Optional)","List of integers corresponding to session list: [45, 30, ...]","Request User Input (Optional)"
9,"Project Scheduling Problem","List of Tasks with Durations and Dependencies","CSV or JSON list: [{'task_id':'A', 'duration_days':5, 'depends_on':[]}, {'task_id':'B', 'duration_days':3, 'depends_on':['A']}, ...]","Request User Input File (CSV/JSON)"
9,"Project Scheduling Problem","Crew Availability (Type and Count per Period)","JSON/Dict: {'Electricians': {'Week1': 2, 'Week2': 3}, 'Plumbers': {...}}","Request User Input File (JSON/Dict)"
9,"Project Scheduling Problem","Material Delivery Lead Times","JSON/Dict: {'Concrete': 7, 'SteelBeams': 14, ...}","Request User Input File (JSON/Dict)"
9,"Project Scheduling Problem","Weather Forecast Source/Data","API endpoint/key or historical weather pattern data","Fetch via Weather API or Use Historical Data"
10,"Network Design Problem","Development Location/Area Definition","Coordinates or Boundary Polygon for Phoenix development","Parse from Problem Statement or Request User Input"
10,"Network Design Problem","Number of Homes","Integer: 120","Parse from Problem Statement or User Input"
10,"Network Design Problem","Elevation Data for Area","Digital Elevation Model (DEM) file or API endpoint","Fetch via GIS Data Source or Topography API"
10,"Network Design Problem","Water Demand Patterns (Per Home/Area, Peak/Avg)","JSON/Dict or Timeseries data: {'peak_demand_gpm': 10, 'avg_daily_gal': 300}","Request User Input or Use Standard Engineering Values"
10,"Network Design Problem","Pipe Types and Costs (Per unit length per diameter)","CSV or JSON list: [{'diameter_inch':4, 'material':'PVC', 'cost_per_meter':15.50}, ...]","Request User Input File (CSV/JSON)"
10,"Network Design Problem","Pump Types and Costs (Based on head/flow capacity)","CSV or JSON list: [{'pump_hp':5, 'max_flow_gpm':500, 'max_head_ft':100, 'cost':5000}, ...]","Request User Input File (CSV/JSON)"
10,"Network Design Problem","Minimum Pressure Requirements at Nodes","Single value (e.g., PSI): 40","Request User Input or Use Standard Engineering Values"
10,"Network Design Problem","Hydraulic Simulation Library/Tool","Name or reference to the simulation engine to be used (e.g., EPANET)","Specify tool to be used by EvoMoe"